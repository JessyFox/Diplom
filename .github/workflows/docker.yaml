name: Docker dev
on:
  workflow_dispatch:

env:
  IMAGE_NAME: "my-program"

jobs:
  push:
    name: Build and push a Docker image
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v3

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          echo IMAGE_ID=$IMAGE_ID

          docker tag $IMAGE_NAME $IMAGE_ID:latest
          docker push $IMAGE_ID:latest
 
  scan:
    name: Scan with Trivy
    runs-on: ubuntu-latest
    needs: push
    permissions:
      security-events: write
      actions: read
      contents: read
      packages: write
      issues: write
    steps:
      - uses: actions/checkout@v3
      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin      
      
          # Сканирование образа Trivy
      - name: Scan with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ghcr.io/jessyfox/my-program:latest
          format: sarif
          output: 'trivy-results.sarif'
          severity: CRITICAL,HIGH,MEDIUM
      
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
      - name: Check for vulnerabilities
        id: check-vulns
        run: |
          if [ -f "trivy-results.sarif" ]; then
            VULN_COUNT=$(jq -e '.runs[0].results | length' trivy-results.sarif)
            if [ "$VULN_COUNT" -gt 0 ]; then
              echo "VULNERABILITIES_FOUND=true" >> $GITHUB_OUTPUT
              echo "VULN_COUNT=$VULN_COUNT" >> $GITHUB_OUTPUT
            else
              echo "VULNERABILITIES_FOUND=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "VULNERABILITIES_FOUND=false" >> $GITHUB_OUTPUT
          fi

      - name: Handle vulnerabilities
        if: steps.check-vulns.outputs.VULNERABILITIES_FOUND == 'true'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # Настраиваем git для gh cli
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          # Создание issue
          gh issue create \
            --title "Уведомление безопасности: Уязвимости в ${{ env.IMAGE_NAME }}" \
            --body "### Критические уязвимости обнаружены, *Уязвимости:** ${{ steps.check-vulns.outputs.VULN_COUNT }}" \
            --label "security,bug"
